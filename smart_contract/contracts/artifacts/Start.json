{
  "hints": {
    "createApplication(string)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "register(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getRegisteredASA()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "vote(pay,bool,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deregister(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getProposal()string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotes()(uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "registeredAsaId": {
          "type": "uint64",
          "key": "registeredAsaId"
        },
        "proposal": {
          "type": "bytes",
          "key": "proposal"
        },
        "votesTotal": {
          "type": "uint64",
          "key": "votesTotal"
        },
        "votesInFavor": {
          "type": "uint64",
          "key": "votesInFavor"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 3
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50IDE="
  },
  "contract": {
    "name": "Start",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "proposal",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "register",
        "args": [
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getRegisteredASA",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "vote",
        "args": [
          {
            "name": "boxMBRPayment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "inFavor",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deregister",
        "args": [
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getProposal",
        "args": [],
        "desc": "",
        "returns": {
          "type": "string",
          "desc": ""
        }
      },
      {
        "name": "getVotes",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64)",
          "desc": ""
        }
      }
    ]
  }
}